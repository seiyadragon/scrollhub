import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState } from 'react'

export async function getStaticProps() {
  var res = await import("../public/database.json")
  var data = res.default
  var crypto = require('crypto')

  if (data.length > 0)
    data.map((book, i) => {
      if (book.Id == "") {
        book.Id = crypto.randomUUID()
        const fs = require('fs')
        fs.writeFileSync("public/database.json", JSON.stringify(data, null, 4))
      }
    })
  else {
    var gutendexCount = await fetch("https://gutendex.com/books").count
    for (var i = 1; i < gutendexCount; i++) {
      var gutendex = await fetch("https://gutendex.com/books/" + i)
      var book = {
        "Id": "crypto.randomUUID()",
        "Title": "gutendex.title",
        "Text": "gutendex.formats.text/html",
        "Image": "gutendex.formats.image/jpeg"
      }
      
      data.push(book)
    }
    
    const fs = require('fs')
    fs.writeFileSync("public/database.json", JSON.stringify(data, null, 4))
  }
  
  return {
    props: {books: data}
  }
}

export function Book({id, title, author, img}) {
  return (
    <div>
        <a className={styles.book_link} href={"books/" + id}>
          <img src={img}></img>
        </a>
    </div>
  )
}

export default function Home({books}) {
  const [searchBarVal, setSearchBarVal] = useState('')

  function searchBarOnChange(event) {
    setSearchBarVal(event.target.value)
  }

  books.sort((a, b) => a.Title.localeCompare(b.Title))
  
  return (
    <div>
      <Head>
        <title>ScrollHub</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico"/>
      </Head>


      <div className={styles.container}>
        <img className={styles.title} src="/scrollhub.png"></img>
        <div className={styles.search_container}>
          <input className={styles.search_bar} placeholder='Search for books' value={searchBarVal} onChange={searchBarOnChange}></input>
        </div>
        
        <ul className={styles.book_list}>
          {books.map((book, i) => {
            if (book.Title.toLowerCase().includes(searchBarVal.toLowerCase()) || book.Author.toLowerCase().includes(searchBarVal.toLowerCase()))
              return <li><Book id={book.Id} title={book.Title} author={book.Author} img={book.Image}/></li>
          })}
        </ul>
      </div>
    </div>
  )
}
